(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[798],{92798:(i,l,a)=>{"use strict";a.r(l),a.d(l,{AlertApiComponent:()=>f,AlertOverviewComponent:()=>j,routes:()=>F});var r=a(60177),x=a(4840),b=a(91526),d=a(89417),v=a(82765),m=a(5951),u=a(43881),M=a(23822),s=a(54438);const y={title:"Configurable alert",component:(()=>{class n{constructor(){this.type="info",this.dismissible=!1,this.elevation=3}onClosed(p){alert("closed event!"),console.log(p)}static#s=this.\u0275fac=function(e){return new(e||n)};static#a=this.\u0275cmp=s.VBU({type:n,selectors:[["alert-example"]],standalone:!0,features:[s.aNF],decls:28,vars:6,consts:[[3,"ngModelChange","ngModel"],["value","info"],["value","success"],["value","warning"],["value","danger"],["min","0","max","24","discrete",""],["matSliderThumb","",3,"ngModelChange","ngModel"],[3,"closed","type","elevation","dismissible"]],template:function(e,t){1&e&&(s.j41(0,"h2"),s.EFF(1,"Alert configuration"),s.k0s(),s.j41(2,"section")(3,"label"),s.EFF(4,"Type:"),s.k0s(),s.j41(5,"mat-radio-group",0),s.mxI("ngModelChange",function(o){return s.DH7(t.type,o)||(t.type=o),o}),s.j41(6,"mat-radio-button",1),s.EFF(7,"Info"),s.k0s(),s.j41(8,"mat-radio-button",2),s.EFF(9,"Success"),s.k0s(),s.j41(10,"mat-radio-button",3),s.EFF(11,"Warning"),s.k0s(),s.j41(12,"mat-radio-button",4),s.EFF(13,"Danger"),s.k0s()()(),s.j41(14,"section")(15,"mat-checkbox",0),s.mxI("ngModelChange",function(o){return s.DH7(t.dismissible,o)||(t.dismissible=o),o}),s.EFF(16,"Dismissible"),s.k0s()(),s.j41(17,"section")(18,"label"),s.EFF(19,"Elevation:"),s.k0s(),s.j41(20,"mat-slider",5)(21,"input",6),s.mxI("ngModelChange",function(o){return s.DH7(t.elevation,o)||(t.elevation=o),o}),s.k0s()()(),s.j41(22,"h2"),s.EFF(23,"Result"),s.k0s(),s.j41(24,"mtx-alert",7),s.bIt("closed",function(o){return t.onClosed(o)}),s.j41(25,"strong"),s.EFF(26,"Heads up!"),s.k0s(),s.EFF(27," This alert needs your attention, but it's not super important.\n"),s.k0s()),2&e&&(s.R7$(5),s.R50("ngModel",t.type),s.R7$(10),s.R50("ngModel",t.dismissible),s.R7$(6),s.R50("ngModel",t.elevation),s.R7$(3),s.Y8G("type",t.type)("elevation",t.elevation)("dismissible",t.dismissible))},dependencies:[d.YN,d.me,d.BC,d.vS,m.VT,m._g,v.So,u.IV,u.OU,M.s],styles:["label[_ngcontent-%COMP%]{padding:0 8px}"]})}return n})(),files:[{file:"app.component.html",content:a(66367),filecontent:a(73970)},{file:"app.component.ts",content:a(38165),filecontent:a(37774)},{file:"app.component.scss",content:a(34731),filecontent:a(92349)}]};var g=a(18498);function C(n,h){1&n&&s.nrm(0,"example-viewer",0),2&n&&s.Y8G("exampleData",h.$implicit)}function A(n,h){1&n&&s.Z7z(0,C,1,1,"example-viewer",0,s.fX1),2&n&&s.Dyx(h.examples)}function T(n,h){1&n&&s.nrm(0,"doc-viewer",0),2&n&&s.Y8G("textContent",h.content.default)}let j=(()=>{class n{constructor(p){this.route=p}static#s=this.\u0275fac=function(e){return new(e||n)(s.rXU(g.nX))};static#a=this.\u0275cmp=s.VBU({type:n,selectors:[["app-alert-overview"]],standalone:!0,features:[s.aNF],decls:2,vars:3,consts:[[3,"exampleData"]],template:function(e,t){if(1&e&&(s.DNE(0,A,2,0),s.nI1(1,"async")),2&e){let c;s.vxM((c=s.bMT(1,1,t.route.data))?0:-1,c)}},dependencies:[b.v,r.Jj],encapsulation:2})}return n})(),f=(()=>{class n{constructor(p){this.route=p}static#s=this.\u0275fac=function(e){return new(e||n)(s.rXU(g.nX))};static#a=this.\u0275cmp=s.VBU({type:n,selectors:[["app-alert-api"]],standalone:!0,features:[s.aNF],decls:2,vars:3,consts:[[3,"textContent"]],template:function(e,t){if(1&e&&(s.DNE(0,T,1,1,"doc-viewer",0),s.nI1(1,"async")),2&e){let c;s.vxM((c=s.bMT(1,1,t.route.data))?0:-1,c)}},dependencies:[x.T,r.Jj],encapsulation:2})}return n})();const F=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:j,pathMatch:"full",data:{examples:[y]}},{path:"api",component:f,pathMatch:"full",data:{content:a(86676)}},{path:"**",redirectTo:"overview"}]},66367:i=>{i.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Alert configuration<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Type:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;type&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span>Info<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>Success<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;warning&quot;</span>&gt;</span>Warning<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;danger&quot;</span>&gt;</span>Danger<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;dismissible&quot;</span>&gt;</span>Dismissible<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Elevation:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-slider</span> <span class="hljs-attr">min</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">max</span>=<span class="hljs-string">&quot;24&quot;</span> <span class="hljs-attr">discrete</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matSliderThumb</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;elevation&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-slider</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Result<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-alert</span> [<span class="hljs-attr">type</span>]=<span class="hljs-string">&quot;type&quot;</span> [<span class="hljs-attr">elevation</span>]=<span class="hljs-string">&quot;elevation&quot;</span> [<span class="hljs-attr">dismissible</span>]=<span class="hljs-string">&quot;dismissible&quot;</span>\n           (<span class="hljs-attr">closed</span>)=<span class="hljs-string">&quot;onClosed($event)&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>Heads up!<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span> This alert needs your attention, but it&#x27;s not super important.\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-alert</span>&gt;</span>\n'},34731:i=>{i.exports='<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span>;\n}\n'},38165:i=>{i.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckbox</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatSlider</span>, <span class="hljs-title class_">MatSliderThumb</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/slider&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxAlert</span>, <span class="hljs-title class_">MtxAlertType</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/alert&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;alert-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">MatRadioGroup</span>,\n    <span class="hljs-title class_">MatRadioButton</span>,\n    <span class="hljs-title class_">MatCheckbox</span>,\n    <span class="hljs-title class_">MatSlider</span>,\n    <span class="hljs-title class_">MatSliderThumb</span>,\n    <span class="hljs-title class_">MtxAlert</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">type</span>: <span class="hljs-title class_">MtxAlertType</span> = <span class="hljs-string">&#x27;info&#x27;</span>;\n  dismissible = <span class="hljs-literal">false</span>;\n  elevation = <span class="hljs-number">3</span>;\n\n  <span class="hljs-title function_">onClosed</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;closed event!&#x27;</span>);\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n}\n'},86676:(i,l,a)=>{"use strict";a.r(l),a.d(l,{default:()=>r});const r='<h1 id="alert">Alert</h1>\n<h2 id="api-reference-for-material-extensions-alert">API reference for Material Extensions Alert</h2>\n<p><code>import { MtxAlertModule } from &apos;@ng-matero/extensions/alert&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxalert"><code>MtxAlert</code></h4>\n<p>Selector: <code>[mtx-alert]</code></p>\n<p>Exported as: <code>mtxAlert</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>type: MtxAlertType</code></td>\n<td align="left">The alert&apos;s type. Default is <strong><code>&apos;default&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>dismissible: boolean</code></td>\n<td align="left">Whether to display an inline close button.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>elevation: number</code></td>\n<td align="left">The alert&apos;s elevation (0~24). Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>closed: EventEmitter&lt;MtxAlertComponent&gt;</code></td>\n<td align="left">Event emitted when the alert closed.</td>\n</tr>\n</tbody></table>\n<h3 id="type-aliases">Type aliases</h3>\n<h4 id="mtxalerttype"><code>MtxAlertType</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxAlertType</span> = <span class="hljs-string">&apos;default&apos;</span> | <span class="hljs-string">&apos;info&apos;</span> | <span class="hljs-string">&apos;success&apos;</span> | <span class="hljs-string">&apos;warning&apos;</span> | <span class="hljs-string">&apos;danger&apos;</span>;\n</pre>\n'},73970:(i,l,a)=>{"use strict";a.r(l),a.d(l,{default:()=>r});const r='<h2>Alert configuration</h2>\n\n<section>\n  <label>Type:</label>\n  <mat-radio-group [(ngModel)]="type">\n    <mat-radio-button value="info">Info</mat-radio-button>\n    <mat-radio-button value="success">Success</mat-radio-button>\n    <mat-radio-button value="warning">Warning</mat-radio-button>\n    <mat-radio-button value="danger">Danger</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="dismissible">Dismissible</mat-checkbox>\n</section>\n\n<section>\n  <label>Elevation:</label>\n  <mat-slider min="0" max="24" discrete>\n    <input matSliderThumb [(ngModel)]="elevation">\n  </mat-slider>\n</section>\n\n<h2>Result</h2>\n\n<mtx-alert [type]="type" [elevation]="elevation" [dismissible]="dismissible"\n           (closed)="onClosed($event)">\n  <strong>Heads up!</strong> This alert needs your attention, but it\'s not super important.\n</mtx-alert>\n'},92349:(i,l,a)=>{"use strict";a.r(l),a.d(l,{default:()=>r});const r="label {\n  padding: 0 8px;\n}\n"},37774:(i,l,a)=>{"use strict";a.r(l),a.d(l,{default:()=>r});const r="import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { MatSlider, MatSliderThumb } from '@angular/material/slider';\nimport { MtxAlert, MtxAlertType } from '@ng-matero/extensions/alert';\n\n@Component({\n  selector: 'alert-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [\n    FormsModule,\n    MatRadioGroup,\n    MatRadioButton,\n    MatCheckbox,\n    MatSlider,\n    MatSliderThumb,\n    MtxAlert,\n  ],\n})\nexport class AppComponent {\n  type: MtxAlertType = 'info';\n  dismissible = false;\n  elevation = 3;\n\n  onClosed(e: any) {\n    alert('closed event!');\n    console.log(e);\n  }\n}\n"}}]);