(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[178],{19178:(p,r,e)=>{"use strict";e.r(r),e.d(r,{DrawerApiComponent:()=>U,DrawerOverviewComponent:()=>N,routes:()=>os});var c=e(60177),L=e(4840),X=e(91526),m=e(89417),w=e(88834),H=e(82765),j=e(53719),F=e(99213),k=e(99631),R=e(5951),s=e(54438),O=e(28203),T=e(66969),f=e(76939),W=e(7673);class _{constructor(){this.data=null,this.hasBackdrop=!0,this.disableClose=!1,this.ariaLabel=null,this.closeOnNavigation=!0,this.autoFocus="first-tabbable",this.restoreFocus=!0,this.position="right"}}var g=e(14085),b=e(99327),M=e(36860),u=e(49969);const V={drawerState:(0,u.hZ)("state",[(0,u.wk)("void, hidden",(0,u.iF)({"box-shadow":"none",visibility:"hidden"})),(0,u.wk)("visible",(0,u.iF)({transform:"none",visibility:"visible"})),(0,u.kY)("visible => void, visible => hidden",(0,u.i0)("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")),(0,u.kY)("void => visible",(0,u.i0)("150ms cubic-bezier(0, 0, 0.2, 1)"))])};var A=e(18617);function K(l,h){}let q=(()=>{class l extends f.lb{get _drawerPosition(){return`mtx-drawer-${this.drawerConfig.position}`}get _drawerWidth(){return"left"===this.drawerConfig.position||"right"===this.drawerConfig.position?(0,g.a1)(this.drawerConfig.width):"100vw"}get _drawerHeight(){return"top"===this.drawerConfig.position||"bottom"===this.drawerConfig.position?(0,g.a1)(this.drawerConfig.height):"100vh"}_getDrawerSize(){return{width:this._drawerWidth,height:this._drawerHeight,minWidth:(0,g.a1)(this.drawerConfig.minWidth),minHeight:(0,g.a1)(this.drawerConfig.minHeight),maxWidth:(0,g.a1)(this.drawerConfig.maxWidth),maxHeight:(0,g.a1)(this.drawerConfig.maxHeight)}}constructor(a,n,t,i,o,d,y,D){super(),this._elementRef=a,this._changeDetectorRef=n,this._focusTrapFactory=t,this._interactivityChecker=i,this._ngZone=o,this.drawerConfig=D,this._animationState="void",this._animationStateChanged=new s.bkB,this._elementFocusedBeforeOpened=null,this.attachDomPortal=is=>(this._validatePortalAttached(),this._setPanelClass(),this._savePreviouslyFocusedElement(),this._portalOutlet.attachDomPortal(is)),this._document=y,this._breakpointSubscription=d.observe([b.Rp.Medium,b.Rp.Large,b.Rp.XLarge]).subscribe(()=>{})}attachComponentPortal(a){return this._validatePortalAttached(),this._setPanelClass(),this._savePreviouslyFocusedElement(),this._portalOutlet.attachComponentPortal(a)}attachTemplatePortal(a){return this._validatePortalAttached(),this._setPanelClass(),this._savePreviouslyFocusedElement(),this._portalOutlet.attachTemplatePortal(a)}enter(){this._destroyed||(this._animationState="visible",this._changeDetectorRef.detectChanges())}exit(){this._destroyed||(this._animationState="hidden",this._changeDetectorRef.markForCheck())}ngOnDestroy(){this._breakpointSubscription.unsubscribe(),this._destroyed=!0}_onAnimationDone(a){"hidden"===a.toState?this._restoreFocus():"visible"===a.toState&&this._trapFocus(),this._animationStateChanged.emit(a)}_onAnimationStart(a){this._animationStateChanged.emit(a)}_toggleClass(a,n){this._elementRef.nativeElement.classList.toggle(a,n)}_validatePortalAttached(){if(this._portalOutlet.hasAttached())throw Error("Attempting to attach drawer content after content is already attached")}_setPanelClass(){this._elementRef.nativeElement.classList.add(...(0,g.FG)(this.drawerConfig.panelClass||[]))}_forceFocus(a,n){this._interactivityChecker.isFocusable(a)||(a.tabIndex=-1,this._ngZone.runOutsideAngular(()=>{a.addEventListener("blur",()=>a.removeAttribute("tabindex")),a.addEventListener("mousedown",()=>a.removeAttribute("tabindex"))})),a.focus(n)}_focusByCssSelector(a,n){const t=this._elementRef.nativeElement.querySelector(a);t&&this._forceFocus(t,n)}_trapFocus(){const a=this._elementRef.nativeElement;switch(this._focusTrap||(this._focusTrap=this._focusTrapFactory.create(a)),this.drawerConfig.autoFocus){case!1:case"dialog":const n=(0,M.vc)();n!==a&&!a.contains(n)&&a.focus();break;case!0:case"first-tabbable":this._focusTrap.focusInitialElementWhenReady();break;case"first-heading":this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role="heading"]');break;default:this._focusByCssSelector(this.drawerConfig.autoFocus)}}_restoreFocus(){const a=this._elementFocusedBeforeOpened;if(this.drawerConfig.restoreFocus&&a&&"function"==typeof a.focus){const n=(0,M.vc)(),t=this._elementRef.nativeElement;(!n||n===this._document.body||n===t||t.contains(n))&&a.focus()}this._focusTrap&&this._focusTrap.destroy()}_savePreviouslyFocusedElement(){this._elementFocusedBeforeOpened=(0,M.vc)(),this._elementRef.nativeElement.focus&&this._ngZone.runOutsideAngular(()=>{Promise.resolve().then(()=>this._elementRef.nativeElement.focus())})}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(s.aKT),s.rXU(s.gRc),s.rXU(A.GX),s.rXU(A.Z7),s.rXU(s.SKi),s.rXU(b.QP),s.rXU(c.qQ,8),s.rXU(_))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["mtx-drawer-container"]],viewQuery:function(n,t){if(1&n&&s.GBs(f.I3,7),2&n){let i;s.mGM(i=s.lsd())&&(t._portalOutlet=i.first)}},hostAttrs:["tabindex","-1","role","dialog","aria-modal","true",1,"mtx-drawer-container"],hostVars:4,hostBindings:function(n,t){1&n&&s.Kam("@state.start",function(o){return t._onAnimationStart(o)})("@state.done",function(o){return t._onAnimationDone(o)}),2&n&&(s.zvX("@state",t._animationState),s.BMQ("aria-label",null==t.drawerConfig?null:t.drawerConfig.ariaLabel),s.HbH(t._drawerPosition))},standalone:!0,features:[s.Vt3,s.aNF],decls:2,vars:2,consts:[[1,"mtx-drawer-content-wrapper"],["cdkPortalOutlet",""]],template:function(n,t){1&n&&(s.j41(0,"div",0),s.DNE(1,K,0,0,"ng-template",1),s.k0s()),2&n&&s.Aen(t._getDrawerSize())},dependencies:[f.I3],styles:[".mtx-drawer-container{display:block;outline:0;background-color:var(--mtx-drawer-container-background-color);color:var(--mtx-drawer-container-text-color);box-shadow:var(--mtx-drawer-container-elevation-shadow)}.cdk-high-contrast-active .mtx-drawer-container{outline:1px solid}.mtx-drawer-content-wrapper{box-sizing:border-box;padding:8px 16px;overflow:auto}.mtx-drawer-right{transform:translate(100%);border-top-left-radius:var(--mtx-drawer-container-shape);border-bottom-left-radius:var(--mtx-drawer-container-shape)}.mtx-drawer-left{transform:translate(-100%);border-top-right-radius:var(--mtx-drawer-container-shape);border-bottom-right-radius:var(--mtx-drawer-container-shape)}.mtx-drawer-bottom{transform:translateY(100%);border-top-left-radius:var(--mtx-drawer-container-shape);border-top-right-radius:var(--mtx-drawer-container-shape)}.mtx-drawer-top{transform:translateY(-100%);border-bottom-left-radius:var(--mtx-drawer-container-shape);border-bottom-right-radius:var(--mtx-drawer-container-shape)}\n"],encapsulation:2,data:{animation:[V.drawerState]}})}return l})();var E=e(67336),B=e(21413),Y=e(57786),v=e(5964),C=e(96697);class x{constructor(h,a){this._overlayRef=a,this._afterDismissed=new B.B,this._afterOpened=new B.B,this.containerInstance=h,this.disableClose=h.drawerConfig.disableClose,h._animationStateChanged.pipe((0,v.p)(n=>"done"===n.phaseName&&"visible"===n.toState),(0,C.s)(1)).subscribe(()=>{this._afterOpened.next(),this._afterOpened.complete()}),h._animationStateChanged.pipe((0,v.p)(n=>"done"===n.phaseName&&"hidden"===n.toState),(0,C.s)(1)).subscribe(()=>{clearTimeout(this._closeFallbackTimeout),a.dispose()}),a.detachments().pipe((0,C.s)(1)).subscribe(()=>{this._afterDismissed.next(this._result),this._afterDismissed.complete()}),(0,Y.h)(a.backdropClick(),a.keydownEvents().pipe((0,v.p)(n=>n.keyCode===E._f))).subscribe(n=>{!this.disableClose&&("keydown"!==n.type||!(0,E.rp)(n))&&(n.preventDefault(),this.dismiss())})}dismiss(h){this._afterDismissed.closed||(this.containerInstance._animationStateChanged.pipe((0,v.p)(a=>"start"===a.phaseName),(0,C.s)(1)).subscribe(a=>{this._closeFallbackTimeout=setTimeout(()=>{this._overlayRef.dispose()},a.totalTime+100),this._overlayRef.detachBackdrop()}),this._result=h,this.containerInstance.exit())}afterDismissed(){return this._afterDismissed}afterOpened(){return this._afterOpened}backdropClick(){return this._overlayRef.backdropClick()}keydownEvents(){return this._overlayRef.keydownEvents()}}const I=new s.nKC("MtxDrawerData"),z=new s.nKC("mtx-drawer-default-options");let S=(()=>{class l{get _openedDrawerRef(){const a=this._parentDrawer;return a?a._openedDrawerRef:this._drawerRefAtThisLevel}set _openedDrawerRef(a){this._parentDrawer?this._parentDrawer._openedDrawerRef=a:this._drawerRefAtThisLevel=a}constructor(a,n,t,i){this._overlay=a,this._injector=n,this._parentDrawer=t,this._defaultOptions=i,this._drawerRefAtThisLevel=null}open(a,n){const t=function G(l,h){return{...l,...h}}(this._defaultOptions||new _,n),i=this._createOverlay(t),o=this._attachContainer(i,t),d=new x(o,i);if(a instanceof s.C4Q)o.attachTemplatePortal(new f.VA(a,null,{$implicit:t.data,drawerRef:d}));else{const y=new f.A8(a,void 0,this._createInjector(t,d)),D=o.attachComponentPortal(y);d.instance=D.instance}return d.afterDismissed().subscribe(()=>{this._openedDrawerRef==d&&(this._openedDrawerRef=null)}),this._openedDrawerRef?(this._openedDrawerRef.afterDismissed().subscribe(()=>d.containerInstance.enter()),this._openedDrawerRef.dismiss()):d.containerInstance.enter(),this._openedDrawerRef=d,d}dismiss(a){this._openedDrawerRef&&this._openedDrawerRef.dismiss(a)}ngOnDestroy(){this._drawerRefAtThisLevel&&this._drawerRefAtThisLevel.dismiss()}_attachContainer(a,n){const i=s.zZn.create({parent:n&&n.viewContainerRef&&n.viewContainerRef.injector||this._injector,providers:[{provide:_,useValue:n}]}),o=new f.A8(q,n.viewContainerRef,i);return a.attach(o).instance}_createOverlay(a){const n=new T.rR({direction:a.direction,hasBackdrop:a.hasBackdrop,disposeOnNavigation:a.closeOnNavigation,maxWidth:"100%",scrollStrategy:a.scrollStrategy||this._overlay.scrollStrategies.block(),positionStrategy:this._overlay.position().global()[a.position]("0")});return a.backdropClass&&(n.backdropClass=a.backdropClass),this._overlay.create(n)}_createInjector(a,n){const t=a&&a.viewContainerRef&&a.viewContainerRef.injector,i=[{provide:x,useValue:n},{provide:I,useValue:a.data}];return a.direction&&(!t||!t.get(O.dS,null,s.$GK.Optional))&&i.push({provide:O.dS,useValue:{value:a.direction,change:(0,W.of)()}}),s.zZn.create({parent:t||this._injector,providers:i})}static#s=this.\u0275fac=function(n){return new(n||l)(s.KVO(T.hJ),s.KVO(s.zZn),s.KVO(l,12),s.KVO(z,8))};static#a=this.\u0275prov=s.jDH({token:l,factory:l.\u0275fac,providedIn:"root"})}return l})(),Z=(()=>{class l{constructor(a){this.drawer=a,this.position="right",this.width="300px",this.height="300px",this.hasBackdrop=!0,this.disableClose=!1,this.closeOnNavigation=!0}open(){this.drawer.open(J,{position:this.position,width:this.width,height:this.height,hasBackdrop:this.hasBackdrop,disableClose:this.disableClose,closeOnNavigation:this.closeOnNavigation,data:{}}).afterDismissed().subscribe(n=>{console.log("The drawer was dismissed")})}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(S))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["drawer-example"]],standalone:!0,features:[s.aNF],decls:36,vars:6,consts:[[3,"ngModelChange","ngModel"],["value","top"],["value","right"],["value","bottom"],["value","left"],["matInput","","type","text",3,"ngModelChange","ngModel"],["mat-raised-button","","color","primary",3,"click"]],template:function(n,t){1&n&&(s.j41(0,"h2"),s.EFF(1,"Drawer configuration"),s.k0s(),s.j41(2,"section")(3,"label"),s.EFF(4,"Position:"),s.k0s(),s.j41(5,"mat-radio-group",0),s.mxI("ngModelChange",function(o){return s.DH7(t.position,o)||(t.position=o),o}),s.j41(6,"mat-radio-button",1),s.EFF(7,"Top"),s.k0s(),s.j41(8,"mat-radio-button",2),s.EFF(9,"Right"),s.k0s(),s.j41(10,"mat-radio-button",3),s.EFF(11,"Bottom"),s.k0s(),s.j41(12,"mat-radio-button",4),s.EFF(13,"Left"),s.k0s()()(),s.j41(14,"section")(15,"mat-form-field")(16,"mat-label"),s.EFF(17,"Width"),s.k0s(),s.j41(18,"input",5),s.mxI("ngModelChange",function(o){return s.DH7(t.width,o)||(t.width=o),o}),s.k0s()(),s.j41(19,"mat-form-field")(20,"mat-label"),s.EFF(21,"Height"),s.k0s(),s.j41(22,"input",5),s.mxI("ngModelChange",function(o){return s.DH7(t.height,o)||(t.height=o),o}),s.k0s()()(),s.j41(23,"section")(24,"mat-checkbox",0),s.mxI("ngModelChange",function(o){return s.DH7(t.hasBackdrop,o)||(t.hasBackdrop=o),o}),s.EFF(25,"HasBackdrop"),s.k0s()(),s.j41(26,"section")(27,"mat-checkbox",0),s.mxI("ngModelChange",function(o){return s.DH7(t.disableClose,o)||(t.disableClose=o),o}),s.EFF(28,"DisableClose"),s.k0s()(),s.j41(29,"section")(30,"mat-checkbox",0),s.mxI("ngModelChange",function(o){return s.DH7(t.closeOnNavigation,o)||(t.closeOnNavigation=o),o}),s.EFF(31,"CloseOnNavigation"),s.k0s()(),s.j41(32,"h2"),s.EFF(33,"Result"),s.k0s(),s.j41(34,"button",6),s.bIt("click",function(){return t.open()}),s.EFF(35,"Open"),s.k0s()),2&n&&(s.R7$(5),s.R50("ngModel",t.position),s.R7$(13),s.R50("ngModel",t.width),s.R7$(4),s.R50("ngModel",t.height),s.R7$(2),s.R50("ngModel",t.hasBackdrop),s.R7$(3),s.R50("ngModel",t.disableClose),s.R7$(3),s.R50("ngModel",t.closeOnNavigation))},dependencies:[m.YN,m.me,m.BC,m.vS,R.VT,R._g,j.rl,j.nJ,k.fg,H.So,w.$z]})}return l})(),J=(()=>{class l{constructor(a){this.drawerRef=a}onClose(){this.drawerRef.dismiss()}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(x))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["drawer-overview"]],standalone:!0,features:[s.aNF],decls:9,vars:0,consts:[[1,"heading"],[1,"flex-spacer"],["mat-icon-button","",3,"click"]],template:function(n,t){1&n&&(s.j41(0,"h1",0)(1,"span"),s.EFF(2,"Title"),s.k0s(),s.nrm(3,"span",1),s.j41(4,"button",2),s.bIt("click",function(){return t.onClose()}),s.j41(5,"mat-icon"),s.EFF(6,"close"),s.k0s()()(),s.j41(7,"p"),s.EFF(8," Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. "),s.k0s())},dependencies:[w.iY,F.An],styles:[".heading[_ngcontent-%COMP%]{display:flex;align-items:center}.flex-spacer[_ngcontent-%COMP%]{flex-grow:1}"]})}return l})();const Q={title:"Configurable drawer",component:Z,files:[{file:"app.component.html",content:e(46442),filecontent:e(98177)},{file:"app.component.ts",content:e(62264),filecontent:e(76397)},{file:"app.component.scss",content:e(60952),filecontent:e(72246)}]};function $(l,h){if(1&l&&(s.j41(0,"li"),s.EFF(1," You chose: "),s.j41(2,"i"),s.EFF(3),s.k0s()()),2&l){const a=s.XpG();s.R7$(3),s.JRh(a.animal)}}let ss=(()=>{class l{constructor(a){this.drawer=a}open(){this.drawer.open(as,{width:"300px",data:{name:this.name,animal:this.animal}}).afterDismissed().subscribe(n=>{console.log("The drawer was dismissed"),this.animal=n})}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(S))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["drawer-example"]],standalone:!0,features:[s.aNF],decls:10,vars:2,consts:[["matInput","",3,"ngModelChange","ngModel"],["mat-raised-button","",3,"click"]],template:function(n,t){1&n&&(s.j41(0,"ol")(1,"li")(2,"mat-form-field")(3,"mat-label"),s.EFF(4,"What's your name?"),s.k0s(),s.j41(5,"input",0),s.mxI("ngModelChange",function(o){return s.DH7(t.name,o)||(t.name=o),o}),s.k0s()()(),s.j41(6,"li")(7,"button",1),s.bIt("click",function(){return t.open()}),s.EFF(8,"Pick one"),s.k0s()(),s.DNE(9,$,4,1,"li"),s.k0s()),2&n&&(s.R7$(5),s.R50("ngModel",t.name),s.R7$(4),s.vxM(t.animal?9:-1))},dependencies:[m.YN,m.me,m.BC,m.vS,j.rl,j.nJ,k.fg,w.$z]})}return l})(),as=(()=>{class l{constructor(a,n){this.drawerRef=a,this.data=n}onNoClick(){this.drawerRef.dismiss()}onOkClick(){this.drawerRef.dismiss(this.data.animal)}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(x),s.rXU(I))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["drawer-overview"]],standalone:!0,features:[s.aNF],decls:18,vars:2,consts:[[1,"heading"],[1,"flex-spacer"],["mat-icon-button","",3,"click"],["matInput","",3,"ngModelChange","ngModel"],["mat-button","",3,"click"],["mat-button","","cdkFocusInitial","",3,"click"]],template:function(n,t){1&n&&(s.j41(0,"h1",0),s.EFF(1),s.nrm(2,"span",1),s.j41(3,"button",2),s.bIt("click",function(){return t.onNoClick()}),s.j41(4,"mat-icon"),s.EFF(5,"close"),s.k0s()()(),s.j41(6,"div")(7,"p"),s.EFF(8,"What's your favorite animal?"),s.k0s(),s.j41(9,"mat-form-field")(10,"mat-label"),s.EFF(11,"Favorite Animal"),s.k0s(),s.j41(12,"input",3),s.mxI("ngModelChange",function(o){return s.DH7(t.data.animal,o)||(t.data.animal=o),o}),s.k0s()()(),s.j41(13,"div")(14,"button",4),s.bIt("click",function(){return t.onNoClick()}),s.EFF(15,"No Thanks"),s.k0s(),s.j41(16,"button",5),s.bIt("click",function(){return t.onOkClick()}),s.EFF(17,"Ok"),s.k0s()()),2&n&&(s.R7$(),s.SpI(" Hi, ",t.data.name," "),s.R7$(11),s.R50("ngModel",t.data.animal))},dependencies:[w.iY,F.An,j.rl,j.nJ,k.fg,m.YN,m.me,m.BC,m.vS,w.$z],styles:[".heading[_ngcontent-%COMP%]{display:flex;align-items:center}.flex-spacer[_ngcontent-%COMP%]{flex-grow:1}"]})}return l})();const ns={title:"Sharing data",component:ss,files:[{file:"app.component.html",content:e(99060),filecontent:e(45571)},{file:"app.component.ts",content:e(91642),filecontent:e(21659)},{file:"app.component.scss",content:e(4318),filecontent:e(32144)}]};var P=e(18498);function ts(l,h){1&l&&s.nrm(0,"example-viewer",0),2&l&&s.Y8G("exampleData",h.$implicit)}function es(l,h){1&l&&s.Z7z(0,ts,1,1,"example-viewer",0,s.fX1),2&l&&s.Dyx(h.examples)}function ls(l,h){1&l&&s.nrm(0,"doc-viewer",0),2&l&&s.Y8G("textContent",h.content.default)}let N=(()=>{class l{constructor(a){this.route=a}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(P.nX))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["app-drawer-overview"]],standalone:!0,features:[s.aNF],decls:2,vars:3,consts:[[3,"exampleData"]],template:function(n,t){if(1&n&&(s.DNE(0,es,2,0),s.nI1(1,"async")),2&n){let i;s.vxM((i=s.bMT(1,1,t.route.data))?0:-1,i)}},dependencies:[X.v,c.Jj],encapsulation:2})}return l})(),U=(()=>{class l{constructor(a){this.route=a}static#s=this.\u0275fac=function(n){return new(n||l)(s.rXU(P.nX))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["app-drawer-api"]],standalone:!0,features:[s.aNF],decls:2,vars:3,consts:[[3,"textContent"]],template:function(n,t){if(1&n&&(s.DNE(0,ls,1,1,"doc-viewer",0),s.nI1(1,"async")),2&n){let i;s.vxM((i=s.bMT(1,1,t.route.data))?0:-1,i)}},dependencies:[L.T,c.Jj],encapsulation:2})}return l})();const os=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:N,pathMatch:"full",data:{examples:[Q,ns]}},{path:"api",component:U,pathMatch:"full",data:{content:e(14236)}},{path:"**",redirectTo:"overview"}]},46442:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Drawer configuration<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>Position:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;position&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;top&quot;</span>&gt;</span>Top<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>Right<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;bottom&quot;</span>&gt;</span>Bottom<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>Left<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Width<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;width&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Height<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;height&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hasBackdrop&quot;</span>&gt;</span>HasBackdrop<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;disableClose&quot;</span>&gt;</span>DisableClose<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;closeOnNavigation&quot;</span>&gt;</span>CloseOnNavigation<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Result<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;open()&quot;</span>&gt;</span>Open<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},99060:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>What&#x27;s your name?<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;open()&quot;</span>&gt;</span>Pick one<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  @if (animal) {\n    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>\n      You chose: <span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>{{animal}}<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\n  }\n<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>\n'},60952:p=>{p.exports=""},4318:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},62264:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span>, <span class="hljs-title class_">MatIconButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckbox</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatFormField</span>, <span class="hljs-title class_">MatLabel</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/form-field&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatIcon</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/icon&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatInput</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/input&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">DrawerPosition</span>, <span class="hljs-title class_">MtxDrawer</span>, <span class="hljs-title class_">MtxDrawerRef</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/drawer&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;drawer-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">MatRadioGroup</span>,\n    <span class="hljs-title class_">MatRadioButton</span>,\n    <span class="hljs-title class_">MatFormField</span>,\n    <span class="hljs-title class_">MatLabel</span>,\n    <span class="hljs-title class_">MatInput</span>,\n    <span class="hljs-title class_">MatCheckbox</span>,\n    <span class="hljs-title class_">MatButton</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">position</span>: <span class="hljs-title class_">DrawerPosition</span> = <span class="hljs-string">&#x27;right&#x27;</span>;\n  width = <span class="hljs-string">&#x27;300px&#x27;</span>;\n  height = <span class="hljs-string">&#x27;300px&#x27;</span>;\n  hasBackdrop = <span class="hljs-literal">true</span>;\n  disableClose = <span class="hljs-literal">false</span>;\n  closeOnNavigation = <span class="hljs-literal">true</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> drawer: MtxDrawer</span>) {}\n\n  <span class="hljs-title function_">open</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> drawerRef = <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawer</span>.<span class="hljs-title function_">open</span>(<span class="hljs-title class_">DrawerConfigurableOverviewComponent</span>, {\n      <span class="hljs-attr">position</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>,\n      <span class="hljs-attr">width</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">width</span>,\n      <span class="hljs-attr">height</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">height</span>,\n      <span class="hljs-attr">hasBackdrop</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">hasBackdrop</span>,\n      <span class="hljs-attr">disableClose</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">disableClose</span>,\n      <span class="hljs-attr">closeOnNavigation</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">closeOnNavigation</span>,\n      <span class="hljs-attr">data</span>: {},\n    });\n\n    drawerRef.<span class="hljs-title function_">afterDismissed</span>().<span class="hljs-title function_">subscribe</span>(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;The drawer was dismissed&#x27;</span>);\n    });\n  }\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;drawer-overview&#x27;</span>,\n  <span class="hljs-attr">template</span>: <span class="hljs-string">`\n    &lt;h1 class=&quot;heading&quot;&gt;\n      &lt;span&gt;Title&lt;/span&gt;\n      &lt;span class=&quot;flex-spacer&quot;&gt;&lt;/span&gt;\n      &lt;button mat-icon-button (click)=&quot;onClose()&quot;&gt;\n        &lt;mat-icon&gt;close&lt;/mat-icon&gt;\n      &lt;/button&gt;\n    &lt;/h1&gt;\n    &lt;p&gt;\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tiam, quis nostrud\n      exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n    &lt;/p&gt;\n  `</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .heading {\n        display: flex;\n        align-items: center;\n      }\n\n      .flex-spacer {\n        flex-grow: 1;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatIconButton</span>, <span class="hljs-title class_">MatIcon</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DrawerConfigurableOverviewComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> drawerRef: MtxDrawerRef&lt;DrawerConfigurableOverviewComponent&gt;</span>) {}\n\n  <span class="hljs-title function_">onClose</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawerRef</span>.<span class="hljs-title function_">dismiss</span>();\n  }\n}\n'},91642:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">Inject</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span>, <span class="hljs-title class_">MatIconButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatFormField</span>, <span class="hljs-title class_">MatLabel</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/form-field&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatIcon</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/icon&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatInput</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/input&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-variable constant_">MTX_DRAWER_DATA</span>, <span class="hljs-title class_">MtxDrawer</span>, <span class="hljs-title class_">MtxDrawerRef</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/drawer&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;drawer-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatFormField</span>, <span class="hljs-title class_">MatLabel</span>, <span class="hljs-title class_">MatInput</span>, <span class="hljs-title class_">MatButton</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  animal?: <span class="hljs-built_in">string</span>;\n  name?: <span class="hljs-built_in">string</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> drawer: MtxDrawer</span>) {}\n\n  <span class="hljs-title function_">open</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">const</span> drawerRef = <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawer</span>.<span class="hljs-title function_">open</span>(<span class="hljs-title class_">DrawerSharingDataOverviewComponent</span>, {\n      <span class="hljs-attr">width</span>: <span class="hljs-string">&#x27;300px&#x27;</span>,\n      <span class="hljs-attr">data</span>: { <span class="hljs-attr">name</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>, <span class="hljs-attr">animal</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">animal</span> },\n    });\n\n    drawerRef.<span class="hljs-title function_">afterDismissed</span>().<span class="hljs-title function_">subscribe</span>(<span class="hljs-function"><span class="hljs-params">result</span> =&gt;</span> {\n      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;The drawer was dismissed&#x27;</span>);\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">animal</span> = result;\n    });\n  }\n}\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;drawer-overview&#x27;</span>,\n  <span class="hljs-attr">template</span>: <span class="hljs-string">`\n    &lt;h1 class=&quot;heading&quot;&gt;\n      Hi, {{ data.name }}\n      &lt;span class=&quot;flex-spacer&quot;&gt;&lt;/span&gt;\n      &lt;button mat-icon-button (click)=&quot;onNoClick()&quot;&gt;\n        &lt;mat-icon&gt;close&lt;/mat-icon&gt;\n      &lt;/button&gt;\n    &lt;/h1&gt;\n    &lt;div&gt;\n      &lt;p&gt;What&#x27;s your favorite animal?&lt;/p&gt;\n      &lt;mat-form-field&gt;\n        &lt;mat-label&gt;Favorite Animal&lt;/mat-label&gt;\n        &lt;input matInput [(ngModel)]=&quot;data.animal&quot; /&gt;\n      &lt;/mat-form-field&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n      &lt;button mat-button (click)=&quot;onNoClick()&quot;&gt;No Thanks&lt;/button&gt;\n      &lt;button mat-button (click)=&quot;onOkClick()&quot; cdkFocusInitial&gt;Ok&lt;/button&gt;\n    &lt;/div&gt;\n  `</span>,\n  <span class="hljs-attr">styles</span>: [\n    <span class="hljs-string">`\n      .heading {\n        display: flex;\n        align-items: center;\n      }\n\n      .flex-spacer {\n        flex-grow: 1;\n      }\n    `</span>,\n  ],\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatIconButton</span>, <span class="hljs-title class_">MatIcon</span>, <span class="hljs-title class_">MatFormField</span>, <span class="hljs-title class_">MatLabel</span>, <span class="hljs-title class_">MatInput</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatButton</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DrawerSharingDataOverviewComponent</span> {\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">\n    <span class="hljs-keyword">public</span> drawerRef: MtxDrawerRef&lt;DrawerSharingDataOverviewComponent&gt;,\n    <span class="hljs-meta">@Inject</span>(MTX_DRAWER_DATA) <span class="hljs-keyword">public</span> data: <span class="hljs-built_in">any</span>\n  </span>) {}\n\n  <span class="hljs-title function_">onNoClick</span>(): <span class="hljs-built_in">void</span> {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawerRef</span>.<span class="hljs-title function_">dismiss</span>();\n  }\n\n  <span class="hljs-title function_">onOkClick</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">drawerRef</span>.<span class="hljs-title function_">dismiss</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">data</span>.<span class="hljs-property">animal</span>);\n  }\n}\n'},14236:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c='<h1 id="drawer">Drawer</h1>\n<h2 id="api-reference-for-material-extensions-drawer">API reference for Material Extensions Drawer</h2>\n<p><code>import { MtxDrawerModule } from &apos;@ng-matero/extensions/drawer&apos;;</code></p>\n'},98177:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c='<h2>Drawer configuration</h2>\n\n<section>\n  <label>Position:</label>\n  <mat-radio-group [(ngModel)]="position">\n    <mat-radio-button value="top">Top</mat-radio-button>\n    <mat-radio-button value="right">Right</mat-radio-button>\n    <mat-radio-button value="bottom">Bottom</mat-radio-button>\n    <mat-radio-button value="left">Left</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n<section>\n  <mat-form-field>\n    <mat-label>Width</mat-label>\n    <input matInput [(ngModel)]="width" type="text">\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Height</mat-label>\n    <input matInput [(ngModel)]="height" type="text">\n  </mat-form-field>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="hasBackdrop">HasBackdrop</mat-checkbox>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="disableClose">DisableClose</mat-checkbox>\n</section>\n\n<section>\n  <mat-checkbox [(ngModel)]="closeOnNavigation">CloseOnNavigation</mat-checkbox>\n</section>\n\n<h2>Result</h2>\n\n<button mat-raised-button color="primary" (click)="open()">Open</button>\n'},72246:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c=""},76397:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c="import { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatInput } from '@angular/material/input';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { DrawerPosition, MtxDrawer, MtxDrawerRef } from '@ng-matero/extensions/drawer';\n\n@Component({\n  selector: 'drawer-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [\n    FormsModule,\n    MatRadioGroup,\n    MatRadioButton,\n    MatFormField,\n    MatLabel,\n    MatInput,\n    MatCheckbox,\n    MatButton,\n  ],\n})\nexport class AppComponent {\n  position: DrawerPosition = 'right';\n  width = '300px';\n  height = '300px';\n  hasBackdrop = true;\n  disableClose = false;\n  closeOnNavigation = true;\n\n  constructor(private drawer: MtxDrawer) {}\n\n  open() {\n    const drawerRef = this.drawer.open(DrawerConfigurableOverviewComponent, {\n      position: this.position,\n      width: this.width,\n      height: this.height,\n      hasBackdrop: this.hasBackdrop,\n      disableClose: this.disableClose,\n      closeOnNavigation: this.closeOnNavigation,\n      data: {},\n    });\n\n    drawerRef.afterDismissed().subscribe(result => {\n      console.log('The drawer was dismissed');\n    });\n  }\n}\n\n@Component({\n  selector: 'drawer-overview',\n  template: `\n    <h1 class=\"heading\">\n      <span>Title</span>\n      <span class=\"flex-spacer\"></span>\n      <button mat-icon-button (click)=\"onClose()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </h1>\n    <p>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tiam, quis nostrud\n      exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n      reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\n    </p>\n  `,\n  styles: [\n    `\n      .heading {\n        display: flex;\n        align-items: center;\n      }\n\n      .flex-spacer {\n        flex-grow: 1;\n      }\n    `,\n  ],\n  standalone: true,\n  imports: [MatIconButton, MatIcon],\n})\nexport class DrawerConfigurableOverviewComponent {\n  constructor(public drawerRef: MtxDrawerRef<DrawerConfigurableOverviewComponent>) {}\n\n  onClose(): void {\n    this.drawerRef.dismiss();\n  }\n}\n"},45571:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c='<ol>\n  <li>\n    <mat-form-field>\n      <mat-label>What\'s your name?</mat-label>\n      <input matInput [(ngModel)]="name">\n    </mat-form-field>\n  </li>\n  <li>\n    <button mat-raised-button (click)="open()">Pick one</button>\n  </li>\n  @if (animal) {\n    <li>\n      You chose: <i>{{animal}}</i>\n    </li>\n  }\n</ol>\n'},32144:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c="/** No CSS for this example */\n"},21659:(p,r,e)=>{"use strict";e.r(r),e.d(r,{default:()=>c});const c="import { Component, Inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton, MatIconButton } from '@angular/material/button';\nimport { MatFormField, MatLabel } from '@angular/material/form-field';\nimport { MatIcon } from '@angular/material/icon';\nimport { MatInput } from '@angular/material/input';\nimport { MTX_DRAWER_DATA, MtxDrawer, MtxDrawerRef } from '@ng-matero/extensions/drawer';\n\n@Component({\n  selector: 'drawer-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [FormsModule, MatFormField, MatLabel, MatInput, MatButton],\n})\nexport class AppComponent {\n  animal?: string;\n  name?: string;\n\n  constructor(private drawer: MtxDrawer) {}\n\n  open() {\n    const drawerRef = this.drawer.open(DrawerSharingDataOverviewComponent, {\n      width: '300px',\n      data: { name: this.name, animal: this.animal },\n    });\n\n    drawerRef.afterDismissed().subscribe(result => {\n      console.log('The drawer was dismissed');\n      this.animal = result;\n    });\n  }\n}\n\n@Component({\n  selector: 'drawer-overview',\n  template: `\n    <h1 class=\"heading\">\n      Hi, {{ data.name }}\n      <span class=\"flex-spacer\"></span>\n      <button mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </h1>\n    <div>\n      <p>What's your favorite animal?</p>\n      <mat-form-field>\n        <mat-label>Favorite Animal</mat-label>\n        <input matInput [(ngModel)]=\"data.animal\" />\n      </mat-form-field>\n    </div>\n    <div>\n      <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n      <button mat-button (click)=\"onOkClick()\" cdkFocusInitial>Ok</button>\n    </div>\n  `,\n  styles: [\n    `\n      .heading {\n        display: flex;\n        align-items: center;\n      }\n\n      .flex-spacer {\n        flex-grow: 1;\n      }\n    `,\n  ],\n  standalone: true,\n  imports: [MatIconButton, MatIcon, MatFormField, MatLabel, MatInput, FormsModule, MatButton],\n})\nexport class DrawerSharingDataOverviewComponent {\n  constructor(\n    public drawerRef: MtxDrawerRef<DrawerSharingDataOverviewComponent>,\n    @Inject(MTX_DRAWER_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.drawerRef.dismiss();\n  }\n\n  onOkClick() {\n    this.drawerRef.dismiss(this.data.animal);\n  }\n}\n"}}]);