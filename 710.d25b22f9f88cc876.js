(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[710],{13710:(p,o,n)=>{"use strict";n.r(o),n.d(o,{CheckboxGroupApiComponent:()=>k,CheckboxGroupOverviewComponent:()=>C,TranslateHttpLoaderFactory:()=>v,routes:()=>J});var c=n(60177),M=n(21626),s=n(54438),u=n(73955),y=n(85635),F=n(13942),A=n(4840),T=n(91526),h=n(89417),j=n(14085);let x=(()=>{class l{constructor(){this._vertical=!1,this._inset=!1}get vertical(){return this._vertical}set vertical(a){this._vertical=(0,j.he)(a)}get inset(){return this._inset}set inset(a){this._inset=(0,j.he)(a)}static#s=this.\u0275fac=function(e){return new(e||l)};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["mat-divider"]],hostAttrs:["role","separator",1,"mat-divider"],hostVars:7,hostBindings:function(e,t){2&e&&(s.BMQ("aria-orientation",t.vertical?"vertical":"horizontal"),s.AVh("mat-divider-vertical",t.vertical)("mat-divider-horizontal",!t.vertical)("mat-divider-inset",t.inset))},inputs:{vertical:"vertical",inset:"inset"},standalone:!0,features:[s.aNF],decls:0,vars:0,template:function(e,t){},styles:[".mat-divider{display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}"],encapsulation:2,changeDetection:0})}return l})();var g=n(82765),_=n(93962),D=n(18617);const z=()=>({standalone:!0});function G(l,d){if(1&l){const a=s.RV6();s.j41(0,"mat-checkbox",2),s.mxI("indeterminateChange",function(t){s.eBV(a);const i=s.XpG();return s.DH7(i.selectAllIndeterminate,t)||(i.selectAllIndeterminate=t),s.Njj(t)}),s.bIt("change",function(t){s.eBV(a);const i=s.XpG();return s.Njj(i._updateMasterCheckboxState(t,-1))}),s.EFF(1),s.k0s()}if(2&l){const a=s.XpG();s.Y8G("checked",a.selectAll),s.R50("indeterminate",a.selectAllIndeterminate),s.Y8G("disabled",a.disabled),s.R7$(),s.JRh(a.selectAllLabel)}}function E(l,d){if(1&l){const a=s.RV6();s.j41(0,"mat-checkbox",3),s.mxI("ngModelChange",function(t){const i=s.eBV(a).$implicit;return s.DH7(i.checked,t)||(i.checked=t),s.Njj(t)}),s.bIt("change",function(t){const i=s.eBV(a).$index,r=s.XpG();return s.Njj(r._updateNormalCheckboxState(t,i))}),s.EFF(1),s.nI1(2,"toObservable"),s.nI1(3,"async"),s.k0s()}if(2&l){const a=d.$implicit,e=s.XpG();s.R50("ngModel",a.checked),s.Y8G("ngModelOptions",s.lJ4(15,z))("aria-describedby",a.ariaDescribedby)("aria-label",a.ariaLabel)("aria-labelledby",a.ariaLabelledby)("color",a.color)("disabled",a.disabled||e.disabled)("disableRipple",a.disableRipple)("labelPosition",a.labelPosition)("required",a.required),s.R7$(),s.JRh(s.bMT(3,13,s.bMT(2,11,a[e.bindLabel])))}}class R{constructor(d,a){this.label=d,this.value=a}}let m=(()=>{class l{get items(){return this._items}set items(a){this._originalItems=JSON.parse(JSON.stringify(a)),this._items=a.map(e=>e instanceof Object?{...e}:new R(e,e))}get compareWith(){return this._compareWith}set compareWith(a){if(null!=a&&"function"!=typeof a)throw Error("`compareWith` must be a function.");this._compareWith=a}constructor(a,e,t){this._changeDetectorRef=a,this._focusMonitor=e,this._elementRef=t,this._items=[],this._originalItems=[],this.bindLabel="label",this.bindValue="value",this.showSelectAll=!1,this.selectAllLabel="Select All",this.disabled=!1,this.change=new s.bkB,this.selectAll=!1,this.selectAllIndeterminate=!1,this.selectedItems=[],this._onChange=()=>null,this._onTouched=()=>null}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(a=>{a||Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}_selectValue(a){const e=this.items.find(t=>{try{const i=t[this.bindValue]===a;return this._compareWith?this._compareWith(t,a):i}catch(i){return console.warn(i),!1}});return e&&(e.checked=!0),e}writeValue(a){if(this.items.forEach(e=>e.checked=!1),a){if(!Array.isArray(a))throw Error("Value must be an array.");a.forEach(e=>this._selectValue(e)),this.selectedItems=a}this._checkMasterCheckboxState(),this._changeDetectorRef.markForCheck()}registerOnChange(a){this._onChange=a}registerOnTouched(a){this._onTouched=a}setDisabledState(a){this.disabled=a,this._changeDetectorRef.markForCheck()}_checkMasterCheckboxState(){this.items.filter(a=>a.checked||!a.disabled).every(a=>!a.checked)?(this.selectAll=!1,this.selectAllIndeterminate=!1):this.items.filter(a=>a.checked||!a.disabled).every(a=>a.checked)?(this.selectAll=!0,this.selectAllIndeterminate=!1):this.selectAllIndeterminate=!0}_getSelectedItems(a){this.selectedItems=this.items.filter(e=>e.checked),this.selectedItems=this._compareWith?this._originalItems.filter(e=>this.selectedItems.find(t=>this._compareWith(e,t))):this.selectedItems.map(e=>e[this.bindValue]),this._onChange(this.selectedItems),this.change.emit({model:this.selectedItems,index:a})}_updateNormalCheckboxState(a,e){this._checkMasterCheckboxState(),this._getSelectedItems(e)}_updateMasterCheckboxState(a,e){this.selectAll=!this.selectAll,this.selectAllIndeterminate=!1,this.selectAll?this.items.filter(t=>t.checked||!t.disabled).forEach(t=>t.checked=!0):this.items.filter(t=>t.checked||!t.disabled).forEach(t=>t.checked=!!t.disabled),this._getSelectedItems(e)}static#s=this.\u0275fac=function(e){return new(e||l)(s.rXU(s.gRc),s.rXU(D.FN),s.rXU(s.aKT))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["mtx-checkbox-group"]],contentQueries:function(e,t,i){if(1&e&&s.wni(i,g.So,5),2&e){let r;s.mGM(r=s.lsd())&&(t._checkboxes=r)}},hostAttrs:[1,"mtx-checkbox-group"],inputs:{items:"items",bindLabel:"bindLabel",bindValue:"bindValue",showSelectAll:[2,"showSelectAll","showSelectAll",s.L39],selectAllLabel:"selectAllLabel",compareWith:"compareWith",disabled:[2,"disabled","disabled",s.L39]},outputs:{change:"change"},exportAs:["mtxCheckboxGroup"],standalone:!0,features:[s.Jv_([{provide:h.kq,useExisting:(0,s.Rfq)(()=>l),multi:!0}]),s.GFd,s.aNF],decls:3,vars:1,consts:[[1,"mtx-checkbox-master",3,"checked","indeterminate","disabled"],[1,"mtx-checkbox-normal",3,"ngModel","ngModelOptions","aria-describedby","aria-label","aria-labelledby","color","disabled","disableRipple","labelPosition","required"],[1,"mtx-checkbox-master",3,"indeterminateChange","change","checked","indeterminate","disabled"],[1,"mtx-checkbox-normal",3,"ngModelChange","change","ngModel","ngModelOptions","aria-describedby","aria-label","aria-labelledby","color","disabled","disableRipple","labelPosition","required"]],template:function(e,t){1&e&&(s.DNE(0,G,2,4,"mat-checkbox",0),s.Z7z(1,E,4,16,"mat-checkbox",1,s.fX1)),2&e&&(s.vxM(t.showSelectAll?0:-1),s.R7$(),s.Dyx(t.items))},dependencies:[h.YN,h.BC,h.YS,h.vS,g.So,_.W,c.Jj],encapsulation:2,changeDetection:0})}return l})();const P={title:"Basic",component:(()=>{class l{constructor(){this.foods=[{label:"Steak",value:"steak",color:"primary"},{label:"Pizza",value:"pizza",color:"accent"},{label:"Tacos",value:"tacos",color:"warn"}],this.selectedFoods=["steak","pizza","tacos"],this.cars=["Ford","Chevrolet","Dodge"],this.selectedCars=["Dodge"]}static#s=this.\u0275fac=function(e){return new(e||l)};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.aNF],decls:9,vars:10,consts:[[3,"ngModelChange","items","ngModel"]],template:function(e,t){1&e&&(s.j41(0,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedFoods,r)||(t.selectedFoods=r),r}),s.k0s(),s.j41(1,"p"),s.EFF(2),s.nI1(3,"json"),s.k0s(),s.nrm(4,"mat-divider"),s.j41(5,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedCars,r)||(t.selectedCars=r),r}),s.k0s(),s.j41(6,"p"),s.EFF(7),s.nI1(8,"json"),s.k0s()),2&e&&(s.Y8G("items",t.foods),s.R50("ngModel",t.selectedFoods),s.R7$(2),s.JRh(s.bMT(3,6,t.selectedFoods)),s.R7$(3),s.Y8G("items",t.cars),s.R50("ngModel",t.selectedCars),s.R7$(2),s.JRh(s.bMT(8,8,t.selectedCars)))},dependencies:[m,h.YN,h.BC,h.vS,x,c.TG],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]})}return l})(),files:[{file:"app.component.html",content:n(48721),filecontent:n(81376)},{file:"app.component.ts",content:n(88703),filecontent:n(63808)},{file:"app.component.scss",content:n(8461),filecontent:n(3707)}]},S={title:"BindLabel & BindValue",component:(()=>{class l{constructor(){this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[3]}static#s=this.\u0275fac=function(e){return new(e||l)};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.aNF],decls:4,vars:5,consts:[["bindLabel","name","bindValue","id",3,"ngModelChange","items","ngModel"]],template:function(e,t){1&e&&(s.j41(0,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedCars,r)||(t.selectedCars=r),r}),s.k0s(),s.j41(1,"p"),s.EFF(2),s.nI1(3,"json"),s.k0s()),2&e&&(s.Y8G("items",t.cars),s.R50("ngModel",t.selectedCars),s.R7$(2),s.JRh(s.bMT(3,3,t.selectedCars)))},dependencies:[m,h.YN,h.BC,h.vS,c.TG]})}return l})(),files:[{file:"app.component.html",content:n(62007),filecontent:n(55414)},{file:"app.component.ts",content:n(62757),filecontent:n(55554)},{file:"app.component.scss",content:n(21607),filecontent:n(47561)}]},O={title:"CompareWith",component:(()=>{class l{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza"},{label:"Tacos",value:"tacos"}],this.selectedFoods=[{label:"Pizza",value:"pizza"}],this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}]}compareWith(a,e){return a.value===e.value}compareWith2(a,e){return a.id===e.id}static#s=this.\u0275fac=function(e){return new(e||l)};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.aNF],decls:9,vars:12,consts:[[3,"ngModelChange","items","ngModel","compareWith"],["bindLabel","name",3,"ngModelChange","items","ngModel","compareWith"]],template:function(e,t){1&e&&(s.j41(0,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedFoods,r)||(t.selectedFoods=r),r}),s.k0s(),s.j41(1,"p"),s.EFF(2),s.nI1(3,"json"),s.k0s(),s.nrm(4,"mat-divider"),s.j41(5,"mtx-checkbox-group",1),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedCars,r)||(t.selectedCars=r),r}),s.k0s(),s.j41(6,"p"),s.EFF(7),s.nI1(8,"json"),s.k0s()),2&e&&(s.Y8G("items",t.foods),s.R50("ngModel",t.selectedFoods),s.Y8G("compareWith",t.compareWith),s.R7$(2),s.JRh(s.bMT(3,8,t.selectedFoods)),s.R7$(3),s.Y8G("items",t.cars),s.R50("ngModel",t.selectedCars),s.Y8G("compareWith",t.compareWith2),s.R7$(2),s.JRh(s.bMT(8,10,t.selectedCars)))},dependencies:[m,h.YN,h.BC,h.vS,x,c.TG],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]})}return l})(),files:[{file:"app.component.html",content:n(17423),filecontent:n(89948)},{file:"app.component.ts",content:n(89361),filecontent:n(90668)},{file:"app.component.scss",content:n(1993),filecontent:n(3951)}]};var b=n(5951);function I(l,d){if(1&l&&(s.j41(0,"mat-radio-button",1),s.EFF(1),s.k0s()),2&l){const a=d.$implicit;s.Y8G("value",a.value),s.R7$(),s.JRh(a.label)}}const B={title:"I18n ngx-translate",component:(()=>{class l{constructor(a){this.translate=a,this.foods=[{label:this.translate.stream("steak"),value:"steak"},{label:this.translate.stream("pizza"),value:"pizza"},{label:this.translate.stream("tacos"),value:"tacos"}],this.selectedFoods=["steak"],this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",a.addLangs(this.langs.map(e=>e.value)),a.setDefaultLang(this.defaultlang)}static#s=this.\u0275fac=function(e){return new(e||l)(s.rXU(u.c$))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.aNF],decls:7,vars:6,consts:[[3,"ngModelChange","change","ngModel"],[3,"value"],[3,"ngModelChange","items","ngModel"]],template:function(e,t){1&e&&(s.j41(0,"mat-radio-group",0),s.mxI("ngModelChange",function(r){return s.DH7(t.defaultlang,r)||(t.defaultlang=r),r}),s.bIt("change",function(r){return t.translate.use(r.value)}),s.Z7z(1,I,2,2,"mat-radio-button",1,s.fX1),s.k0s(),s.j41(3,"mtx-checkbox-group",2),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedFoods,r)||(t.selectedFoods=r),r}),s.k0s(),s.j41(4,"p"),s.EFF(5),s.nI1(6,"json"),s.k0s()),2&e&&(s.R50("ngModel",t.defaultlang),s.R7$(),s.Dyx(t.langs),s.R7$(2),s.Y8G("items",t.foods),s.R50("ngModel",t.selectedFoods),s.R7$(2),s.JRh(s.bMT(6,4,t.selectedFoods)))},dependencies:[b.VT,h.YN,h.BC,h.vS,b._g,m,c.TG]})}return l})(),files:[{file:"app.component.html",content:n(45261),filecontent:n(39298)},{file:"app.component.ts",content:n(97903),filecontent:n(1214)},{file:"app.component.scss",content:n(24339),filecontent:n(43853)},{file:"assets/zh-CN.json",content:n(22286),filecontent:n(11750)},{file:"assets/en-US.json",content:n(18544),filecontent:n(19560)}]};var U=n(88834);const W={title:"SelectAll",component:(()=>{class l{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza",disabled:!0},{label:"Tacos",value:"tacos"}],this.selectedFoods=["tacos"],this.disabled=!1}onOptionChange(a){console.log(a)}toggleOptionDisabled(){this.foods[1].disabled=!this.foods[1].disabled,this.foods=this.foods.filter(a=>!0)}static#s=this.\u0275fac=function(e){return new(e||l)};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["checkbox-group-example"]],standalone:!0,features:[s.aNF],decls:9,vars:8,consts:[["mat-raised-button","",3,"click"],[3,"ngModelChange","ngModel"],["selectAllLabel","Select all foods",3,"ngModelChange","change","items","ngModel","disabled","showSelectAll"]],template:function(e,t){1&e&&(s.j41(0,"p")(1,"button",0),s.bIt("click",function(){return t.toggleOptionDisabled()}),s.EFF(2,"Toggle Option[1] Disabled"),s.k0s(),s.j41(3,"mat-checkbox",1),s.mxI("ngModelChange",function(r){return s.DH7(t.disabled,r)||(t.disabled=r),r}),s.EFF(4,"Disabled checkbox group"),s.k0s()(),s.j41(5,"mtx-checkbox-group",2),s.mxI("ngModelChange",function(r){return s.DH7(t.selectedFoods,r)||(t.selectedFoods=r),r}),s.bIt("change",function(r){return t.onOptionChange(r)}),s.k0s(),s.j41(6,"p"),s.EFF(7),s.nI1(8,"json"),s.k0s()),2&e&&(s.R7$(3),s.R50("ngModel",t.disabled),s.R7$(2),s.Y8G("items",t.foods),s.R50("ngModel",t.selectedFoods),s.Y8G("disabled",t.disabled)("showSelectAll",!0),s.R7$(2),s.JRh(s.bMT(8,6,t.selectedFoods)))},dependencies:[U.$z,g.So,h.YN,h.BC,h.vS,m,c.TG]})}return l})(),files:[{file:"app.component.html",content:n(95727),filecontent:n(55956)},{file:"app.component.ts",content:n(32913),filecontent:n(60404)},{file:"app.component.scss",content:n(48545),filecontent:n(39927)}]};var f=n(18498);function w(l,d){if(1&l&&s.nrm(0,"doc-heading",0)(1,"example-viewer",1),2&l){const a=d.$implicit;s.Y8G("text",a.title),s.R7$(),s.Y8G("exampleData",a)}}function L(l,d){1&l&&s.Z7z(0,w,2,2,null,null,s.fX1),2&l&&s.Dyx(d.examples)}function N(l,d){1&l&&s.nrm(0,"doc-viewer",0),2&l&&s.Y8G("textContent",d.content.default)}let C=(()=>{class l{constructor(a){this.route=a}static#s=this.\u0275fac=function(e){return new(e||l)(s.rXU(f.nX))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["app-checkbox-group-overview"]],standalone:!0,features:[s.aNF],decls:2,vars:3,consts:[[3,"text"],[3,"exampleData"]],template:function(e,t){if(1&e&&(s.DNE(0,L,2,0),s.nI1(1,"async")),2&e){let i;s.vxM((i=s.bMT(1,1,t.route.data))?0:-1,i)}},dependencies:[F.Y,T.v,c.Jj],encapsulation:2})}return l})(),k=(()=>{class l{constructor(a){this.route=a}static#s=this.\u0275fac=function(e){return new(e||l)(s.rXU(f.nX))};static#a=this.\u0275cmp=s.VBU({type:l,selectors:[["app-checkbox-group-api"]],standalone:!0,features:[s.aNF],decls:2,vars:3,consts:[[3,"textContent"]],template:function(e,t){if(1&e&&(s.DNE(0,N,1,1,"doc-viewer",0),s.nI1(1,"async")),2&e){let i;s.vxM((i=s.bMT(1,1,t.route.data))?0:-1,i)}},dependencies:[A.T,c.Jj],encapsulation:2})}return l})();function v(l){return new y.s(l,"assets/i18n/checkbox-group/","_json")}const J=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:C,data:{examples:[P,S,O,W,B]},providers:[(0,s.oKB)(u.h.forRoot({loader:{provide:u.Wr,useFactory:v,deps:[M.Qq]}}))]},{path:"api",component:k,pathMatch:"full",data:{content:n(50796)}},{path:"**",redirectTo:"overview"}]},48721:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},62007:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n                    <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n                    <span class="hljs-attr">bindValue</span>=<span class="hljs-string">&quot;id&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},17423:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n                    [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n                    <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>\n                    [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith2&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedCars|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},45261:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  @for (lang of langs; track lang) {\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>{{lang.label}}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  }\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n'},95727:p=>{p.exports='<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;toggleOptionDisabled()&quot;</span>&gt;</span>Toggle Option[1] Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Disabled checkbox group<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n                    [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n                    [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">&quot;disabled&quot;</span>\n                    [<span class="hljs-attr">showSelectAll</span>]=<span class="hljs-string">&quot;true&quot;</span>\n                    <span class="hljs-attr">selectAllLabel</span>=<span class="hljs-string">&quot;Select all foods&quot;</span>\n                    (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;onOptionChange($event)&quot;</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{selectedFoods|json}}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},18544:p=>{p.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;steak&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Steak&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pizza&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Pizza&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;tacos&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Tacos&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},22286:p=>{p.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;steak&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u725b\u6392&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pizza&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u62ab\u8428&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;tacos&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u7389\u7c73\u5377&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},8461:p=>{p.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},21607:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},1993:p=>{p.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},24339:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},48545:p=>{p.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},88703:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDivider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/divider&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">MtxCheckboxGroupOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatDivider</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">foods</span>: <span class="hljs-title class_">MtxCheckboxGroupOption</span>[] = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;accent&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span> },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  cars = [<span class="hljs-string">&#x27;Ford&#x27;</span>, <span class="hljs-string">&#x27;Chevrolet&#x27;</span>, <span class="hljs-string">&#x27;Dodge&#x27;</span>];\n  selectedCars = [<span class="hljs-string">&#x27;Dodge&#x27;</span>];\n}\n'},62757:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  cars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n\n  selectedCars = [<span class="hljs-number">3</span>];\n}\n'},89361:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDivider</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/divider&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatDivider</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  foods = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n  selectedFoods = [{ <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span> }];\n  <span class="hljs-title function_">compareWith</span>(<span class="hljs-params">a: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-property">value</span> === b.<span class="hljs-property">value</span>;\n  }\n\n  cars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  selectedCars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  <span class="hljs-title function_">compareWith2</span>(<span class="hljs-params">a: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-property">id</span> === b.<span class="hljs-property">id</span>;\n  }\n}\n'},97903:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MatRadioGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">MtxCheckboxGroupOption</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TranslateService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatRadioGroup</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatRadioButton</span>, <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  <span class="hljs-attr">foods</span>: <span class="hljs-title class_">MtxCheckboxGroupOption</span>[] = [\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;steak&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;pizza&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;tacos&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span>,\n    },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>];\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> translate: TranslateService</span>) {\n    translate.<span class="hljs-title function_">addLangs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">langs</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span>));\n    translate.<span class="hljs-title function_">setDefaultLang</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultlang</span>);\n  }\n}\n'},32913:p=>{p.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButton</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckbox</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroup</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.component.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.component.scss&#x27;</span>,\n  <span class="hljs-attr">standalone</span>: <span class="hljs-literal">true</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatButton</span>, <span class="hljs-title class_">MatCheckbox</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MtxCheckboxGroup</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AppComponent</span> {\n  foods = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n\n  selectedFoods = [<span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  disabled = <span class="hljs-literal">false</span>;\n\n  <span class="hljs-title function_">onOptionChange</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n\n  <span class="hljs-title function_">toggleOptionDisabled</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>[<span class="hljs-number">1</span>].<span class="hljs-property">disabled</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>[<span class="hljs-number">1</span>].<span class="hljs-property">disabled</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> <span class="hljs-literal">true</span>);\n  }\n}\n'},50796:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='<h1 id="checkbox-group">Checkbox Group</h1>\n<h2 id="api-reference-for-material-extensions-checkbox-group">API reference for Material Extensions checkbox-group</h2>\n<p><code>import { MtxCheckboxGroupModule } from &apos;@ng-matero/extensions/checkbox-group&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxcheckboxgroup"><code>MtxCheckboxGroup</code></h4>\n<p>Selector: <code>[mtx-checkbox-group]</code></p>\n<p>Exported as: <code>mtxCheckboxGroup</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>items: any[]</code></td>\n<td align="left">Items array.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>bindLabel: string</code></td>\n<td align="left">Object property to use for label. Default is <strong><code>&apos;label&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>bindValue: string</code></td>\n<td align="left">Object property to use for selected model. By default binds to whole object. Default is <strong><code>&apos;value&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>compareWith: (a: any, b: any) =&gt; boolean</code></td>\n<td align="left">A function to compare the option values with the selected values. The first argument is a value from an option. The second is a value from the selection(model). A boolean should be returned.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showSelectAll: boolean</code></td>\n<td align="left">Whether show select all. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>selectAllLabel: string</code></td>\n<td align="left">The lable of select all. Default is <strong><code>&apos;Select All&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>change: EventEmitter&lt;{  model: MtxCheckboxGroupOption[];  index: number; }&gt;()</code></td>\n<td align="left">Event emitted when the selection changed.</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxcheckboxgroupoption"><code>MtxCheckboxGroupOption</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxCheckboxGroupOption</span> {\n  ariaDescribedby?: <span class="hljs-built_in">string</span>;\n  ariaLabel?: <span class="hljs-built_in">string</span>;\n  ariaLabelledby?: <span class="hljs-built_in">string</span>;\n  label?: <span class="hljs-built_in">any</span>;\n  value?: <span class="hljs-built_in">any</span>;\n  color?: <span class="hljs-built_in">string</span>;\n  checked?: <span class="hljs-built_in">boolean</span>;\n  disabled?: <span class="hljs-built_in">boolean</span>;\n  disableRipple?: <span class="hljs-built_in">boolean</span>;\n  indeterminate?: <span class="hljs-built_in">boolean</span>;\n  labelPosition?: <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n  id?: <span class="hljs-built_in">string</span>;\n  name?: <span class="hljs-built_in">string</span> | <span class="hljs-literal">null</span>;\n  required?: <span class="hljs-built_in">boolean</span>;\n  [<span class="hljs-attr">k</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span>;\n}\n</pre>\n'},81376:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars" [(ngModel)]="selectedCars"></mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},3707:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="mat-divider {\n  margin: 1rem 0;\n}\n"},63808:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatDivider } from '@angular/material/divider';\nimport { MtxCheckboxGroup, MtxCheckboxGroupOption } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [MtxCheckboxGroup, FormsModule, MatDivider, JsonPipe],\n})\nexport class AppComponent {\n  foods: MtxCheckboxGroupOption[] = [\n    { label: 'Steak', value: 'steak', color: 'primary' },\n    { label: 'Pizza', value: 'pizza', color: 'accent' },\n    { label: 'Tacos', value: 'tacos', color: 'warn' },\n  ];\n  selectedFoods = ['steak', 'pizza', 'tacos'];\n\n  cars = ['Ford', 'Chevrolet', 'Dodge'];\n  selectedCars = ['Dodge'];\n}\n"},55414:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='<mtx-checkbox-group [items]="cars"\n                    bindLabel="name"\n                    bindValue="id"\n                    [(ngModel)]="selectedCars">\n</mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},47561:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="/** No CSS for this example */\n"},55554:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MtxCheckboxGroup } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [MtxCheckboxGroup, FormsModule, JsonPipe],\n})\nexport class AppComponent {\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n\n  selectedCars = [3];\n}\n"},89948:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='<mtx-checkbox-group [items]="foods"\n                    [(ngModel)]="selectedFoods"\n                    [compareWith]="compareWith">\n</mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars"\n                    bindLabel="name"\n                    [(ngModel)]="selectedCars"\n                    [compareWith]="compareWith2">\n</mtx-checkbox-group>\n<p>{{selectedCars|json}}</p>\n'},3951:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="mat-divider {\n  margin: 1rem 0;\n}\n"},90668:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatDivider } from '@angular/material/divider';\nimport { MtxCheckboxGroup } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [MtxCheckboxGroup, FormsModule, MatDivider, JsonPipe],\n})\nexport class AppComponent {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza' },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n  selectedFoods = [{ label: 'Pizza', value: 'pizza' }];\n  compareWith(a: any, b: any) {\n    return a.value === b.value;\n  }\n\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  selectedCars = [\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  compareWith2(a: any, b: any) {\n    return a.id === b.id;\n  }\n}\n"},39298:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  @for (lang of langs; track lang) {\n    <mat-radio-button [value]="lang.value">{{lang.label}}</mat-radio-button>\n  }\n</mat-radio-group>\n\n<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n\n'},43853:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="/** No CSS for this example */\n"},1214:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatRadioButton, MatRadioGroup } from '@angular/material/radio';\nimport { MtxCheckboxGroup, MtxCheckboxGroupOption } from '@ng-matero/extensions/checkbox-group';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [MatRadioGroup, FormsModule, MatRadioButton, MtxCheckboxGroup, JsonPipe],\n})\nexport class AppComponent {\n  foods: MtxCheckboxGroupOption[] = [\n    {\n      label: this.translate.stream('steak'),\n      value: 'steak',\n    },\n    {\n      label: this.translate.stream('pizza'),\n      value: 'pizza',\n    },\n    {\n      label: this.translate.stream('tacos'),\n      value: 'tacos',\n    },\n  ];\n  selectedFoods = ['steak'];\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor(public translate: TranslateService) {\n    translate.addLangs(this.langs.map(item => item.value));\n    translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},55956:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='<p>\n  <button mat-raised-button (click)="toggleOptionDisabled()">Toggle Option[1] Disabled</button>\n  <mat-checkbox [(ngModel)]="disabled">Disabled checkbox group</mat-checkbox>\n</p>\n\n<mtx-checkbox-group [items]="foods"\n                    [(ngModel)]="selectedFoods"\n                    [disabled]="disabled"\n                    [showSelectAll]="true"\n                    selectAllLabel="Select all foods"\n                    (change)="onOptionChange($event)">\n</mtx-checkbox-group>\n<p>{{selectedFoods|json}}</p>\n'},39927:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="/** No CSS for this example */\n"},60404:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatCheckbox } from '@angular/material/checkbox';\nimport { MtxCheckboxGroup } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-example',\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n  standalone: true,\n  imports: [MatButton, MatCheckbox, FormsModule, MtxCheckboxGroup, JsonPipe],\n})\nexport class AppComponent {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza', disabled: true },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n\n  selectedFoods = ['tacos'];\n\n  disabled = false;\n\n  onOptionChange(e: any) {\n    console.log(e);\n  }\n\n  toggleOptionDisabled() {\n    this.foods[1].disabled = !this.foods[1].disabled;\n    this.foods = this.foods.filter(_ => true);\n  }\n}\n"},19560:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='{\n  "steak": "Steak",\n  "pizza": "Pizza",\n  "tacos": "Tacos"\n}\n'},11750:(p,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>c});const c='{\n  "steak": "\u725b\u6392",\n  "pizza": "\u62ab\u8428",\n  "tacos": "\u7389\u7c73\u5377"\n}\n'}}]);